#
# configuration used for development purposes on all development plattforms
# (currently Mac OS X, OpenSuSE, Ubuntu)
#
#Â (c) 2014 Prof Dr Andreas Muelle, Hochschule Rapperswil
#

# set default compiler flags
# the -fuse-cxa-atexit seems to be necessary for dynamically loaded 
# C++ modules, but I'm not convinced. The tests still crash when
# unloading the modules
CFLAGS="-Wall -Wextra -g -O2"
CXXFLAGS="-fuse-cxa-atexit ${CFLAGS}"
export CFLAGS CXXFLAGS

# first find out what type of system we are
systemtype=`uname`
case ${systemtype} in
Darwin)	echo "configuring for Mac OS X"
	;;
Linux)	if [ -r /etc/debian_version ]
	then
		echo "configuring for Debian"
		systemtype=Debian
		multiarch=`dpkg-architecgure -qDEB_HOST_MULTIARCH`
	else
		if [ -r /etc/SuSE-release ]
		then
			echo "configuring for SuSE"
			systemtype=SuSE
		else
			echo "configuring for unspecified Linux (cross your fingers)"
		fi
	fi
	;;
esac

# add ICE PATH for an ICE that we compiled ourselves
if [ -d /usr/local/Ice ]
then
	ICEDIR=/usr/local/Ice
fi

if [ -n "${ICEDIR}" ]
then
	PATH=${ICEDIR}/bin:${PATH}
	if [ -d ${ICEDIR}/bin/c++11 ]
	then
		PATH="${ICEDIR}/bin/c++11:${PATH}"
	fi
	commonflags="${commonflags} --with-ice=${ICEDIR}"
fi

set -x

EXTRA_CXXFLAGS=
EXTRA_LDFLAGS=
EXTRA_LIBS=

if [ -d /usr/local/astro ]
then
	ASTROPREFIX=/usr/local/astro
else
	ASTROPREFIX=`pwd`/../control/root
fi
EXTRA_LDFLAGS="-Wl,-rpath -Wl,${ASTROPREFIX}/lib"

# now that we have all the information, run the configure script
case ${systemtype} in
Linux)
	CXXFLAGS="${CFLAGS} --std=c++11 -fopenmp"
	EXTRA_CXXFLAGS="--std=c++11"
	EXTRA_LDFLAGS=""
	;;
Debian)
	CXXFLAGS="${CXXFLAGS} --std=c++11 -fopenmp"
	LDFLAGS="${LDFLAGS} -Wl,-rpath -Wl,/usr/local/lib"
	EXTRA_CXXFLAGS="--std=c++11"
	EXTRA_LIBS=""
	;;
SuSE)
	LDFLAGS="-L/usr/local/lib64 -lusb-1.0"
	CXXFLAGS="${CFLAGS} --std=c++11"
	EXTRA_CXXFLAGS="-fopenmp"
	;;
Darwin)
	if [ -d /Applications/Qt5/Qt5.15/5.15.2/clang_64/bin ]
	then
		PATH=${PATH}:/Applications/Qt5/Qt5.15/5.15.2/clang_64/bin
		export PATH
	elif [ -d /Applications/Qt5/Qt5.14/5.14.0/clang_64/bin ]
	then
		PATH=${PATH}:/Applications/Qt5/Qt5.14/5.14.0/clang_64/bin
		export PATH
	elif [ -d /Applications/Qt5/Qt5.13/5.13.1/clang_64/bin ]
	then
		PATH=${PATH}:/Applications/Qt5/Qt5.13/5.13.1/clang_64/bin
		export PATH
	elif [ -d /Applications/Qt5/Qt5.12/5.12.4/clang_64/bin ]
	then
		PATH=${PATH}:/Applications/Qt5/Qt5.12/5.12.4/clang_64/bin
		export PATH
	elif [ -d /Applications/Qt5/Qt5.12/5.12.3/clang_64/bin ]
	then
		PATH=${PATH}:/Applications/Qt5/Qt5.12/5.12.3/clang_64/bin
		export PATH
	elif [ -d /Applications/Qt5/Qt5.11/5.11.2/clang_64/bin ]
	then
		PATH=${PATH}:/Applications/Qt5/Qt5.11/5.11.2/clang_64/bin
		export PATH
	elif [ -d /Applications/Qt5/Qt5.7/5.7/clang_64/bin ]
	then
		PATH=${PATH}:/Applications/Qt5/Qt5.7/5.7/clang_64/bin
		export PATH
	fi
	LDFLAGS="-L/usr/local/lib -lusb-1.0"
	CXXFLAGS="${CFLAGS} --std=c++11"
	export CFLAGS CXXFLAGS LDFLAGS
	CXXFLAGS="${CXXFLAGS} -stdlib=libc++"
	;;
esac

export EXTRA_CXXFLAGS EXTRA_LDFLAGS EXTRA_LIBS
export CXXFLAGS LDFLAGS

./configure ${commonflags}


