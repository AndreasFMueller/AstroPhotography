configuration system:

Pointing:
      - azimuth not evaluated

Devices:
      -	reservation of devices to ensure that a CCD e.g. used for guiging
	is not used for other exposures at the same time
      -	query method to ask for the most recent problem with a device
      -	Camera: query method to ask whether the most recent exposure was
	successful
      -	Warmup feature (for ATIK cameras)
      - Some CCDs have different modes (download speed, image quality,
	whether or not to turn of the amplifier to prevent amplifier bloom),
	which should be made available through the CCD interface
      - Need minimum/maximum exposure time for gui (make available through
	properties?)

Guiding:
      -	Missing configuration itmes should result in useful error messages
      -	transfer mount position data into the calibration
      -	bright stars that appear in the field of view during calibration
	lead to problems.
      -	Crash during camera initialization cause nonrecoverable errors in
	calibration and guiding. In general, failures in those threads should
	be handled more gracefully
      - reservation of relevant devices during calibraiton and guiding
      - during guiding, should we introduce a damping factor to prevent 
	oscillations at the price of somewhat slower corrections?
      - Preparation of calibration, in particular computation of the grid
	constant should happen earlier, so that we can throw a useful
	exception already in the startCalibration call.
      - All calls should test whether the instrument is really available
	and throw a useful exception for the user (particularly important
	for calls via ICE)
      - Communicator cleanup when the snowguide utility exits

Focusing:
      - FWHM does not work reliably

Image:
      - FITS write operation has setPrecious/precious accessors that should
	be unified
      - Bug in attribute read routines: if headers are in a second hdu, then
	they are ignored
      - logic of precious is flawed
      - If an image has an RGB mosaic, and we take a subframe, what 
	mosaic do we actually give the subframe?

Tasks:
      -	deadlock in the task manager thread startup
      - dark images on atik camera are take with shutter open

URLs:

Instruments:
      - If an ICE instrument changes, but the guider derived from it has
	already been used, the changes become effective only after a restart
	of the server
      - Query method to ask whether an instrument has sufficient configuration
	for a purpose. E.g. calibration needs focal length and possibly
	guide speed for calibration, but non of these for guiding.

Drivers:
      - When there is a problem with the SX camera, we should try to reset
	the camera and retry the operation. It should not be necessary to
	disconnect and reconnect the camera to reset it.
      - SX Camera names change too often (they are essentially bus numbers,
	but when one has to restart the camera, the bus position may change).
	Can we have persistent names for these devices?
      -	It should be possible to reread the devices of a module, just in
	case a new device was added during runtime.
      - NICE driver cannot talk from Ubuntu 16.04 to other systems (ICE
	help request pending)

ICE client/server:
      - USB Timeout in a driver should always be converted to a decent timeout
	exception sent back to the client and hopefully handled there
      -	shutter option f√ºr snowtask.cpp

Catalog:
      -	Why is precession in Hipparcos catalog not needed?

General:
      - Template class with variadic constructor for throwing exceptions
	(doing the usual msg = stringprintf, debug(LOG_ERR,...) and throw
	all at once by simply instatiating the template).

Hardware:
      - Label Cameras with up direction so that pointing becomes easier.

Bugs:

Hang in QSI driver:

Thread 16 (Thread 0xa3f0b2f0 (LWP 19909)):
#0  __libc_do_syscall () at ../sysdeps/unix/sysv/linux/arm/libc-do-syscall.S:46
#1  0xb65d34ac in pthread_join (threadid=2803888880, thread_return=0x0) at pthread_join.c:90
#2  0xb654ad50 in std::thread::join() () from /usr/lib/arm-linux-gnueabihf/libstdc++.so.6
#3  0xb024e7a2 in astro::camera::qsi::QsiCcd::startExposure (this=0xaf801d70, exposure=...) at QsiCcd.cpp:65
#4  0xb6e5f814 in astro::task::ExposureWork::run (this=0xae6096a8) at ExposureWork.cpp:248
#5  0xb6c9a9c8 in astro::task::TaskExecutor::main (this=0xae602c68) at TaskExecutor.cpp:72
#6  0xb6e61a3e in astro::task::taskmain (te=<optimized out>) at TaskExecutor.cpp:36
#7  0xb654adc8 in ?? () from /usr/lib/arm-linux-gnueabihf/libstdc++.so.6
#8  0xb65d25b4 in start_thread (arg=0x0) at pthread_create.c:335
#9  0xb643dc4c in ?? () at ../sysdeps/unix/sysv/linux/arm/clone.S:89 from /lib/arm-linux-gnueabihf/libc.so.6
Backtrace stopped: previous frame identical to this frame (corrupt stack?)

Thread 15 (Thread 0xa71ff2f0 (LWP 19906)):
#0  __libc_do_syscall () at ../sysdeps/unix/sysv/linux/arm/libc-do-syscall.S:46
#1  0xb65d91f8 in __lll_lock_wait (futex=0xae601fb4, private=0) at lowlevellock.c:46
#2  0xb65d440c in __GI___pthread_mutex_lock (mutex=0xae601fb4) at pthread_mutex_lock.c:115
#3  0xb024e5ec in __gthread_mutex_lock (__mutex=<optimized out>)
    at /usr/include/arm-linux-gnueabihf/c++/5/bits/gthr-default.h:748
#4  __gthread_recursive_mutex_lock (__mutex=<optimized out>)
    at /usr/include/arm-linux-gnueabihf/c++/5/bits/gthr-default.h:810
#5  std::recursive_mutex::lock (this=<optimized out>) at /usr/include/c++/5/mutex:176
#6  std::unique_lock<std::recursive_mutex>::lock (this=0xa71fecbc) at /usr/include/c++/5/mutex:485
#7  std::unique_lock<std::recursive_mutex>::unique_lock (__m=..., this=0xa71fecbc) at /usr/include/c++/5/mutex:415
#8  astro::camera::qsi::QsiCcd::run (this=0xaf801d70) at QsiCcd.cpp:171
#9  0xb654adc8 in ?? () from /usr/lib/arm-linux-gnueabihf/libstdc++.so.6
#10 0xb65d25b4 in start_thread (arg=0x0) at pthread_create.c:335
#11 0xb643dc4c in ?? () at ../sysdeps/unix/sysv/linux/arm/clone.S:89 from /lib/arm-linux-gnueabihf/libc.so.6
Backtrace stopped: previous frame identical to this frame (corrupt stack?)


