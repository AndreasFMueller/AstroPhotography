This Project allows to control astrophotographic cameras and accessories
and delivers a framework to build astrophotography tools.

What's in the subdirectories
----------------------------

cli
	a command line client named astro to access the CORBA server

client
	some client programs for the CORBA server

doc
	documentation, currently this contains primarily doxygen generated
	source code documentation

drivers
	Contains subdirectories for driver classes for all supported
	cameras and other devices. This include

	microtouch
		a driver class to control the Microtouch focuser from
		Starizona
	mock1, mock2
		mockup driver modules for testing
	net
		a pseudo driver that gives access to remote cameras over
		the CORBA interface as if the camera wer actually local
	qhy
		drivers for QHYCCD cameras
	qsi
		driver for Quantum Scientific Imaging cameras, requires
		the open source QSI API library to be installed.
	sbig
		driver for SBIG cameras. Note that this requires the
		proprietary SBIG library, which does not support ARM Linux
	simulator
		a simulated camera with cooler, focuser and guider port
		for testing during the day and without a telescope ;-)
	sx
		driver for starlight express cameras
	unicap
		driver for USB video class cameras, based on the Unicap
		library and video4linux
	uvc
		user space driver for USB video class cameras

idl
	Interface Definition Language files for all CORBA services

include
	header files

lib
	implementation of all classes defined in public header files

man
	manual pages for all installed programs

root
	During development, this directory is used as the root directory
	for the install target.

server
	Source code for the CORBA server functions

test
	Some test programs that depend on 

tools
	some command line tools, mostly for testing


Building the software
---------------------

This is an autotools and libtool based package. To build it, make sure
you have installed have installed autotools and libtool. Then create
the build files using

	$ libtoolize -f
	$ aclocal
	$ autoheader
	$ automake -a -c
	$ autoconf

Then configure the package using the included configureit script. This
script sets some configure options useful for debugging and development,
e.g. it configures it to install in the directory root. Some tests
expect it to be installed there.

As a help to configuring the package, the script configureit is provided.
I use it to select the right configure options on my various development
platforms.

Dependencies
------------

The project depends on the following external packages to compile.

Mandatory packages:

 - libusb: this is a common package on all Linux systems, but Mac OS X
   users will have to download from http://www.libusb.org and compile
   themselves. For Mac OS X, libusb 1.0.16 (release candidate at least 10,
   previous versions cannot call libusb_context twice) or newer must be
   used, as previous versions have bugs that cause the software to fail
   on that plattform.

 - CPPUnit: Unit testing framework for C++, available on SourceFoge:
   http://sourceforge.net/projects/cppunit/

 - Cfitsio: C-Library to manipulate FITS files, available from the
   NASA web site: http://heasarc.gsfc.nasa.gov/fitsio/
   The website also has links to online documentation here:
   http://heasarc.gsfc.nasa.gov/docs/software/fitsio/c/c_user/cfitsio.html

 - LAPACK: in several places, linear systems of equations and least squares
   problems for relatively large numbers of equations or unknowns need to
   be solved. For these operations, LAPACK is used.

 - omniORB: The client-server-communication uses Corba, and the build system
   assumes that omniORB is preinstalled for the purpose.

 - GLPK, the GNU Linear Programming toolKit. This package is used for the
   algorithm that finds a background to subtract.

 - SQLite3 is used for persistence of various types of objects

Optional packages:

 - Unicap: on Linux, accessing USB Video class cameras is simplified
   by using the Video4Linux and the Unicap library. See
   http://unicap-imaging.org

 - SBIG driver library. Astrophotography cameras by SBIG are supported
   via the SBIG driver library, which can be obtained from the SBIG
   website.

Some issues:

 - Linux defines a macro minor in /usr/include/sys/sysmacros.h. On the other
   hand, CORBA defines a member function minor in CORBA::SystemException.
   This only works if the minor macro is overridden. One way to do this is
   to include sys/sysmacros in /usr/local/include/omniORB4/CORBA_Exception.h

--
$Id$
