This Project allows to control astrophotographic cameras and accessories
and delivers a framework to build astrophotography tools.

What's in the subdirectories
----------------------------

doc
	documentation, currently this contains primarily doxygen generated
	source code documentation

drivers
	Contains subdirectories for driver classes for all supported
	cameras and other devices. This include

	asi
		drivers for the ASI cameras
	atik
		drivers for ATIK cameras, based on a library provided
		by ATIK (no longer supported, because the library seems
		no longer to be maintained)
	celestron
		driver for the celestron mount
	microtouch
		a driver class to control the Microtouch focuser from
		Starizona
	mock1, mock2
		mockup driver modules for testing
	net
		a pseudo driver that gives access to remote cameras over
		the CORBA interface as if the camera wer actually local
	othello
		drivers for devices built for the project, i.e. the 
		guide port and focuser interfaces
	qhy
		drivers for QHYCCD cameras, based on a home made library,
		essentially only supporting the QHY8Pro
	qhy2
		drivers for all QHYCCD cameras, based on QHYCCD SDK library
	qsi
		driver for Quantum Scientific Imaging cameras, requires
		the open source QSI API library to be installed.
	sbig
		driver for SBIG cameras. Note that this requires the
		proprietary SBIG library, which does not support ARM Linux
	simulator
		a simulated camera with cooler, focuser and guider port
		for testing during the day and without a telescope ;-)
	sx
		driver for starlight express cameras
	unicap
		driver for USB video class cameras, based on the Unicap
		library and video4linux
	uvc
		user space driver for USB video class cameras

ice
	Contains ICE IDL and supporting classes for an ICE based server
	named "snowstar". This server makes all telescope control operations
	available through an ICE based interface. The idea is that a simple
	computer like athe Odroid U3 can control a telescope and all camera
	equipment without a permanent connection to a client.

	slice
		interface definition for ICE interfaces

	include
		Headers generated from slice source code and for classes
		common to several clients

	lib
		Various support classes used in the clients

	client
		Various command line clients for the snowstar server

	server
		The source code for teh snowstar server


include
	header files

lib
	implementation of all classes defined in public header files

man
	manual pages for all installed programs

root
	During development, this directory is used as the root directory
	for the install target.

test
	Some test programs that depend on 

tools
	some command line tools, mostly for testing


Building the software
---------------------

This is an autotools and libtool based package. To build it, make sure
you have installed have installed autotools and libtool. Then create
the build files using

	$ libtoolize -f
	$ aclocal
	$ autoheader
	$ automake -a -c
	$ autoconf

Then configure the package using the included configureit script. This
script sets some configure options useful for debugging and development,
e.g. it configures it to install in the directory root. Some tests
expect it to be installed there.

As a help to configuring the package, the script configureit is provided.
I use it to select the right configure options on my various development
platforms.

Dependencies
------------

The project depends on the following external packages to compile.

Mandatory packages:

 - libusb: this is a common package on all Linux systems, but Mac OS X
   users will have to download from http://www.libusb.org and compile
   themselves. For Mac OS X, libusb 1.0.16 (release candidate at least 10,
   previous versions cannot call libusb_context twice) or newer must be
   used, as previous versions have bugs that cause the software to fail
   on that plattform. (Ubuntu: libusb-dev)

 - CPPUnit: Unit testing framework for C++, available on SourceFoge:
   http://sourceforge.net/projects/cppunit/ (Ubuntu: libcppunit-dev)

 - Cfitsio: C-Library to manipulate FITS files, available from the
   NASA web site: http://heasarc.gsfc.nasa.gov/fitsio/
   The website also has links to online documentation here:
   http://heasarc.gsfc.nasa.gov/docs/software/fitsio/c/c_user/cfitsio.html
   (Ubuntu: libcfitsio3-dev)

 - FFTW3: image processing functions sometimes use fast fourier transforms
   provided by the fftw3 library

 - LAPACK: in several places, linear systems of equations and least squares
   problems for relatively large numbers of equations or unknowns need to
   be solved. For these operations, LAPACK is used. (Ubuntu: liblapack-dev)

 - GLPK, the GNU Linear Programming toolKit. This package is used for the
   algorithm that finds a background to subtract. (Ubuntu: libglpk-dev)

 - SQLite3 is used for persistence of various types of objects (Ubuntu:
   libsqlite3-dev)

 - UUID, library for unique ids, used to tag FITS files so that duplicates
   can be recognized (Ubuntu: uuid-dev)

 - libxml2, library used for parsing XML files (Ubuntu: libxml2-dev)

 - The std::regex class of the C++11 standard is used, but g++, although it
   does come with the appropriate headers, does not implement the std::regex
   class. In this case, the regex class from the boost library must be used,
   just install it, and it will be detected automatically

 - Avahi client library: locating a server is done using zeroconf, which is
   implemented on Linux in the Avahi library (libavahi-client-dev).

 - PNG library (libpng-dev)

 - JPEG library (libjpeg-dev)

Optional packages:

 - ZeroC ICE is the prefered communications engine, version 3.5.1 is required
   for C++11 support and for ARM. (Ubuntu: zeroc-ice35)

 - Unicap: on Linux, accessing USB Video class cameras is simplified
   by using the Video4Linux and the Unicap library. See
   http://unicap-imaging.org (Ubuntu: libunicap2-dev)

 - SBIG driver library. Astrophotography cameras by SBIG are supported
   via the SBIG driver library, which can be obtained from the SBIG
   website.

Some issues:

 none known currently

Ubuntu:

   Here is a list of Debian package names that need to be installed.
   Mandatory:
	libusb-dev
	libcppunit-dev
	libcfitsio3-dev
	liblapack-dev
	libglpk-dev
	libsqlite3-dev
	uuid-dev
        libfftw3-dev
	libavahi-client-dev
	libxml2-dev
	libjpeg-dev
	libpng-dev
   Optional:
	zeroc-ice35
	libunicap2-dev
   needed for Ice-3.7.2 compile:
	libbz2-dev
	liblmdb-dev
	libmcpp-dev

--
$Id$
